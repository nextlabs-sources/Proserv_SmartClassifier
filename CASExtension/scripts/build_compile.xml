<!-- build_compile.xml

Description:
	This ANT script publishes installers and build artifacts to s:/build.

	To use this script, you must update properties is <project root>/scripts/build.properties or overide
	them from commandline (using -D option). For example:

		set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH%
		ant -XX:MaxPermSize=512m -Dnlbuildroot=C:/depot/PolicyStudio/dev/BuildScript_1205 -Dexternal.dir=c:/depot/external -Dnlexternaldir=c:/depot/external -Dbuild_number=10001 -f scripts/build_publish.xml

	or

		set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH%
		set ANT_OPTS=-XX:MaxPermSize=512m -Dnlbuildroot=%NLBUILDROOT% -Dexternal.dir=%NLEXTERNALDIR% -Dnlexternaldir=%NLEXTERNALDIR% -Dbuild_number=10001
		ant -f scripts/build_publish.xml -v
-->
<project name="build_compile" default="all" basedir=".">

    <!-- Propery files -->
    <property file="${basedir}/build.properties"/>
    <property environment="env"/>

    <!-- Global properties -->
    <property name="lib_dir" location="${nlbuildroot}/lib"/>
    <property name="conf_dir" location="${nlbuildroot}/conf"/>
    <property name="xlib_dir" location="${nlbuildroot}/xlib"/>
    <property name="lib_jar_dir" location="${lib_dir}/jar"/>
    <property name="xlib_jar_dir" location="${xlib_dir}/jar"/>
    <property name="xlib_exe_x86_dir" location="${xlib_dir}/exe/x86"/>
    <property name="xlib_exe_x64_dir" location="${xlib_dir}/exe/x64"/>
    <property name="build_dir" location="${nlbuildroot}/build"/>
    <property name="cas_build_dir" location="${build_dir}/cas"/>
    <property name="cas_src_dir" location="${nlbuildroot}/cas"/>
    <property name="classes_dir" value="${build_dir}/classes"/>
    <property name="package_dir" value="${build_dir}/${package_name}"/>
    <property name="dist_zip_file_name" value="${package_name}-${version_str}-${version_build_short}-${build_date_long}.zip"/>

    <!-- Dump properties -->
    <echoproperties/>

    <echo message="INFO: Dump properties completed"/>

    <!-- Sanity checks -->
    <fail message="nlbuildroot is not set" unless="nlbuildroot"/>
    <fail message="nlbuildroot is empty">
        <condition>
            <equals arg1="${nlbuildroot}" arg2="" trim="true"/>
        </condition>
    </fail>
    <available file="${nlbuildroot}" type="dir" property="local.nlbuildroot_exists"/>
    <fail message="nlbuildroot directory does not exist - ${nlbuildroot}" unless="local.nlbuildroot_exists"/>

    <echo message="INFO: Sanity check completed (no error)"/>

    <path id="compile.classpath">
        <fileset dir="${lib_jar_dir}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${xlib_jar_dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <!-- Global tasks -->
    <tstamp>
        <format property="local.now" pattern="EEE, d MMM yyyy HH:mm:ss Z"/>
    </tstamp>

    <echo message="version_str = ${version_str}"/>
    <echo message="time = ${local.now}"/>

    <!-- Targets -->
    <target name="all" description="Default for all" depends="clean, compile, package"/>

    <target name="clean" description="Delete all build artifacts" depends="">
        <delete includeemptydirs="true" dir="${build_dir}"/>
    </target>

    <target name="compile" description="Compile the project" depends="clean">
        <mkdir dir="${lib_jar_dir}"/>
        <mkdir dir="${classes_dir}"/>
        <mkdir dir="${cas_build_dir}"/>
    	
    	<delete>
    	  <fileset dir="${cas_src_dir}/WEB-INF/lib" includes="c3p0*"/>
    	  <fileset dir="${cas_src_dir}/WEB-INF/lib" includes="bcprov-jdk15on-1.51*"/>
    	  <fileset dir="${cas_src_dir}/WEB-INF/lib" includes="httpclient*"/>
    	  <fileset dir="${cas_src_dir}/WEB-INF/lib" includes="httpcore*"/>
    	  <fileset dir="${cas_src_dir}/WEB-INF/lib" includes="mchange*"/>
    	  <fileset dir="${cas_src_dir}/WEB-INF/lib" includes="ojdbc*"/>
    	  <fileset dir="${cas_src_dir}/WEB-INF/lib" includes="quartz*"/>
    	  <fileset dir="${cas_src_dir}/WEB-INF/lib" includes="commons-codec-1.10*"/>
    	  <fileset dir="${cas_src_dir}/WEB-INF/lib" includes="commons-io-2.4.jar*"/>
    	  <fileset dir="${cas_src_dir}/WEB-INF/lib" includes="commons-logging-1.1.3*"/>
    	  <fileset dir="${cas_src_dir}/WEB-INF/lib" includes="commons-lang*"/>
    	  <fileset dir="${cas_src_dir}/WEB-INF/lib" includes="slf4j*"/>
    	</delete>

        <copy todir="${cas_build_dir}">
            <fileset dir="${cas_src_dir}"/>
        </copy>

        <copy todir="${cas_build_dir}/WEB-INF/lib">
            <fileset dir="${xlib_jar_dir}"/>
            <fileset dir="${lib_jar_dir}"/>
        </copy>

        <javac debug="on" debuglevel="lines,vars,source" srcdir="${nlbuildroot}/src" destdir="${classes_dir}">
            <classpath refid="compile.classpath"/>
            <include name="**/*.java"/>
            <!--exclude name="**/Test*.java" /-->
        </javac>

        <jar destfile="${build_dir}/nextlabs-cas-extension.jar" basedir="${classes_dir}">
            <fileset dir="${classes_dir}" includes="**/com/nextlabs/**/*.class"/>

            <manifest>
                <attribute name="Java-Version" value="${java.version}"/>
                <attribute name="Implementation-Vendor" value="NextLabs, Inc."/>
                <attribute name="Implementation-Title" value="${product_name}"/>
                <attribute name="Implementation-Version" value="${version_str} (${build_number})"/>
                <attribute name="Implementation-Time" value="${local.now}"/>
            </manifest>
        </jar>

        <copy file="${build_dir}/nextlabs-cas-extension.jar" todir="${cas_build_dir}/WEB-INF/lib"/>

        <!--copy the required configuration files-->
        <copy overwrite="true" file="${conf_dir}/deployerConfigContext.xml" todir="${cas_build_dir}/WEB-INF"/>
        <copy overwrite="true" file="${conf_dir}/messages.properties" todir="${cas_build_dir}/WEB-INF/classes"/>
        <copy overwrite="true" file="${conf_dir}/top.jsp" todir="${cas_build_dir}/WEB-INF/view/jsp/default/ui/includes" />
        <!--<copy file="${conf_dir}/propertyFileConfigurer.xml" todir="${cas_build_dir}/WEB-INF/spring-configuration/"/>-->
        <!--delete dir="${cas_src_dir}"/-->
    </target>

    <target name="package" description="builds each plugin module">
        <mkdir dir="${package_dir}"/>
        <mkdir dir="${package_dir}/xlib"/>
        <mkdir dir="${package_dir}/logs"/>

        <copy todir="${package_dir}" overwrite="true">
            <fileset file="${build_dir}/*.jar"/>
            <fileset file="${nlbuildroot}/README.txt"/>
        </copy>
    	
        <copy todir="${package_dir}/xlib" overwrite="true">
            <fileset dir="${xlib_jar_dir}">
            </fileset>
            <fileset dir="${lib_jar_dir}">
            </fileset>
        </copy>
    	
    	<zip destfile="${build_dir}/${dist_zip_file_name}" encoding="UTF-8">
            <fileset dir="${build_dir}">
                <include name="${package_name}/**"/>
            </fileset>
        </zip>
    </target>
</project>

