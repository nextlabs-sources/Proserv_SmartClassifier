<!-- build_compile.xml

Description:
	This ANT script publishes installers and build artifacts to s:/build.

	To use this script, you must update properties is <project root>/scripts/build.properties or overide
	them from commandline (using -D option). For example:

		set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH%
		ant -XX:MaxPermSize=512m -Dnlbuildroot=C:/depot/PolicyStudio/dev/BuildScript_1205 -Dexternal.dir=c:/depot/external -Dnlexternaldir=c:/depot/external -Dbuild_number=10001 -f scripts/build_publish.xml

	or

		set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH%
		set ANT_OPTS=-XX:MaxPermSize=512m -Dnlbuildroot=%NLBUILDROOT% -Dexternal.dir=%NLEXTERNALDIR% -Dnlexternaldir=%NLEXTERNALDIR% -Dbuild_number=10001
		ant -f scripts/build_publish.xml -v
-->
<project name="build_compile" default="all" basedir=".">

    <!-- Property files -->
    <property file="${basedir}/build.properties"/>
    <property environment="env"/>

    <!-- Global properties -->
    <property name="conf_dir" location="${nlbuildroot}/conf"/>
    <property name="lib_dir" location="${nlbuildroot}/lib"/>
    <property name="xlib_dir" location="${nlbuildroot}/xlib"/>
    <property name="xlib_tomcat_dir" location="${xlib_dir}/tomcat"/>
    <property name="lib_jar_dir" location="${lib_dir}/jar"/>
    <property name="xlib_jar_dir" location="${xlib_dir}/jar"/>
    <property name="xlib_exe_x86_dir" location="${xlib_dir}/exe/x86"/>
    <property name="xlib_exe_x64_dir" location="${xlib_dir}/exe/x64"/>
    <property name="build_dir" location="${nlbuildroot}/build"/>
    <property name="classes_dir" value="${build_dir}/classes"/>
    <property name="tomcat_dir" value="${build_dir}/tomcat"/>
    <property name="tomcat_webapps_dir" value="${tomcat_dir}/webapps"/>
    <property name="package_dir" value="${build_dir}/${package_name}"/>
    <property name="resources_dir" value="${nlbuildroot}/src/main/resources"/>
    <property name="web_dir" value="${nlbuildroot}/src/main/webapp"/>
    <property name="dist_zip_file_name"
              value="${package_name}-${version_str}-${version_build_short}-${build_date_long}.zip"/>

    <echoproperties/>
    <echo message="INFO: Dump properties completed"/>

    <!-- Sanity checks -->
    <fail message="nlbuildroot is not set" unless="nlbuildroot"/>
    <fail message="nlbuildroot is empty">
        <condition>
            <equals arg1="${nlbuildroot}" arg2="" trim="true"/>
        </condition>
    </fail>
    <available file="${nlbuildroot}" type="dir" property="local.nlbuildroot_exists"/>
    <fail message="nlbuildroot directory does not exist - ${nlbuildroot}" unless="local.nlbuildroot_exists"/>

    <echo message="INFO: Sanity check completed (no error)"/>

    <path id="compile.classpath">
        <fileset dir="${lib_jar_dir}">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="${xlib_jar_dir}">
            <include name="*.jar"/>
        </fileset>
    </path>

    <!-- Global tasks -->
    <tstamp>
        <format property="local.now" pattern="EEE, d MMM yyyy HH:mm:ss Z"/>
    </tstamp>

    <echo message="version_str = ${version_str}"/>
    <echo message="time = ${local.now}"/>

    <!-- Targets -->
    <target name="all" description="Default for all" depends="clean, compile, package"/>

    <target name="clean" description="Delete all build artifacts" depends="">
        <delete includeemptydirs="true" dir="${build_dir}"/>
    </target>

    <target name="compile" description="Compile the project" depends="clean">
        <mkdir dir="${classes_dir}"/>

        <javac debug="on" includeantruntime="false" debuglevel="lines,vars,source" srcdir="${nlbuildroot}/src" destdir="${classes_dir}">
            <classpath refid="compile.classpath"/>
            <include name="**/*.java"/>
            <!--exclude name="**/Test*.java" /-->
        </javac>

        <copy todir="${classes_dir}" overwrite="true">
            <fileset file="${resources_dir}/*.xml"/>
            <fileset file="${resources_dir}/*.properties"/>
            <fileset file="${conf_dir}/*.properties"/>
        </copy>

        <copy todir="${tomcat_dir}" overwrite="true">
            <fileset dir="${nlbuildroot}/xlib/tomcat"/>
        </copy>

        <copy file="${conf_dir}/web_Global.xml" tofile="${tomcat_dir}/conf/web.xml" overwrite="true" force="true"/>
        <copy file="${conf_dir}/web_ROOTWebApp.xml" tofile="${tomcat_dir}/webapps/ROOT/WEB-INF/web.xml" overwrite="true"
              force="true"/>
        <copy file="${conf_dir}/urlrewrite.xml" todir="${tomcat_dir}/webapps/ROOT/WEB-INF" overwrite="true"
              force="true"/>
        <copy file="${conf_dir}/tomcat-users.xml" todir="${tomcat_dir}/conf" overwrite="true" force="true"/>
        <copy file="${conf_dir}/install.bat" todir="${tomcat_dir}/bin" overwrite="true" force="true"/>
    	<copy file="${conf_dir}/log4j2.xml" todir="${tomcat_dir}/conf" overwrite="true" force="true"/>
    	<copy file="${conf_dir}/setenv.bat" todir="${tomcat_dir}/bin" overwrite="true" force="true"/>
    	<copy file="${conf_dir}/server.xml" todir="${tomcat_dir}/conf" overwrite="true" force="true"/>
    	<copy file="${xlib_jar_dir}/log4j-api-2.17.1.jar" todir="${tomcat_dir}/lib" overwrite="true" force="true"/>
    	<copy file="${xlib_jar_dir}/log4j-core-2.17.1.jar" todir="${tomcat_dir}/lib" overwrite="true" force="true"/>
    	<copy file="${xlib_jar_dir}/log4j-1.2-api-2.17.1.jar" todir="${tomcat_dir}/lib" overwrite="true" force="true"/>
    	<copy file="${xlib_jar_dir}/log4j-jul-2.17.1.jar" todir="${tomcat_dir}/lib" overwrite="true" force="true"/>
    	<copy file="${xlib_jar_dir}/disruptor-3.4.2.jar" todir="${tomcat_dir}/lib" overwrite="true" force="true"/>
    	<copy file="${xlib_jar_dir}/tomcat-juli-adapters.jar" todir="${tomcat_dir}/lib" overwrite="true" force="true"/>
    	<copy file="${xlib_jar_dir}/tomcat-juli.jar" todir="${tomcat_dir}/bin" overwrite="true" force="true"/>
    	<move file="${tomcat_dir}/bin/tomcat9.exe" tofile="${tomcat_dir}/bin/Smart Classifier Web UI.exe" overwrite="true" force="true"/>
    	<move file="${tomcat_dir}/bin/tomcat9w.exe" tofile="${tomcat_dir}/bin/Smart Classifier Web UIw.exe" overwrite="true" force="true"/>

        <war destfile="${build_dir}/SmartClassifier.war" webxml="${web_dir}/WEB-INF/web.xml">
            <fileset dir="${web_dir}">
                <exclude name="**/context.xml"/>
            	<exclude name="**/ui/deploy/"/>
            	<exclude name="**/ui/test/"/>
            	<exclude name="**/ui/testlib/"/>
            </fileset>
            <classes dir="${classes_dir}"/>
            <lib dir="${lib_jar_dir}"/>
            <lib dir="${xlib_jar_dir}"/>

            <manifest>
                <attribute name="Java-Version" value="${java.version}"/>
                <attribute name="Implementation-Vendor" value="NextLabs, Inc."/>
                <attribute name="Implementation-Title" value="${product_name}"/>
                <attribute name="Implementation-Version" value="${version_str} (${build_number})"/>
                <attribute name="Implementation-Time" value="${local.now}"/>
            </manifest>
        </war>
        <copy file="${build_dir}/SmartClassifier.war" todir="${tomcat_webapps_dir}" preservelastmodified="true"
              overwrite="false" verbose="true"/>
    </target>

    <target name="package" description="builds each war module">
        <mkdir dir="${package_dir}"/>
        <mkdir dir="${package_dir}/logs"/>
        <mkdir dir="${package_dir}/work"/>

        <copy todir="${package_dir}">
            <fileset dir="${tomcat_dir}"/>
        </copy>
    	
        <zip destfile="${build_dir}/${dist_zip_file_name}" encoding="UTF-8">
            <fileset dir="${build_dir}">
                <include name="${package_name}/**"/>
            </fileset>
        </zip>
    </target>
</project>

